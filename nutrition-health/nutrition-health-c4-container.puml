@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title 饮食健康系统 - 容器图 (C4 Level 2)

LAYOUT_WITH_LEGEND()

' 外部用户和系统
Person(user, "用户", "关注饮食健康的个人用户")
Person(nutritionist, "营养师", "专业营养咨询师") 
Person(doctor, "医生", "临床医生")
Person(nutritionChef, "营养厨师", "健康食谱创作者")
Person(admin, "管理员", "系统管理人员")

System_Ext(foodAPI, "食物数据库API", "USDA、中国食物成分表")
System_Ext(barcodeAPI, "条码识别API", "食品条码扫描服务")
System_Ext(imageAI, "食物识别AI", "图像识别服务")
System_Ext(wearableAPI, "可穿戴设备", "智能硬件集成")
System_Ext(healthPlatform, "健康平台", "Apple Health/Google Fit")
System_Ext(groceryAPI, "食材配送API", "生鲜电商接口")

System_Boundary(nutritionSystem, "饮食健康系统") {
    
    ' 前端应用层
    Container(userApp, "用户移动应用", "React Native", "饮食记录、营养分析、健康计划")
    Container(webApp, "Web应用", "React 18 + Next.js", "营养管理、数据分析、社区互动")
    Container(nutritionistPortal, "营养师工作台", "Vue 3", "营养咨询、饮食方案制定")
    Container(doctorPortal, "医生工作站", "Angular 15", "医疗营养建议、饮食处方")
    Container(chefPortal, "厨师创作平台", "React 18", "食谱创作、烹饪指导")
    Container(adminPortal, "管理后台", "Vue 3 + Element Plus", "系统管理、内容审核")
    Container(miniProgram, "小程序", "微信/支付宝小程序", "轻量级营养记录")
    
    ' API网关层
    Container(apiGateway, "API网关", "Kong + Nginx", "API路由、认证、限流、监控")
    Container(webBFF, "Web BFF", "Node.js + Express", "Web端业务聚合")
    Container(mobileBFF, "Mobile BFF", "Node.js + Fastify", "移动端业务聚合")
    Container(professionalBFF, "Professional BFF", "Node.js + Koa", "专业端业务聚合")
    
    ' 核心业务服务
    Container(userService, "用户服务", "Java + Spring Boot", "用户管理、认证授权")
    Container(nutritionService, "营养分析服务", "Python + FastAPI", "营养计算、成分分析")
    Container(dietService, "饮食记录服务", "Node.js + TypeScript", "饮食记录、食物日志")
    Container(planService, "计划服务", "Java + Spring Boot", "饮食计划、目标管理")
    Container(recipeService, "食谱服务", "Node.js + Express", "食谱管理、烹饪指导")
    Container(consultationService, "咨询服务", "Java + Spring Boot", "营养咨询、专业建议")
    Container(healthService, "健康数据服务", "Python + Django", "健康指标、数据同步")
    Container(socialService, "社交服务", "Node.js + Socket.io", "社区互动、饮食分享")
    Container(reminderService, "提醒服务", "Go + Gin", "用餐提醒、习惯养成")
    Container(reportService, "报告服务", "Python + FastAPI", "营养报告、健康分析")
    
    ' AI智能服务
    Container(recommendEngine, "推荐引擎", "Python + TensorFlow", "个性化食谱推荐")
    Container(nutritionAI, "营养AI助手", "Python + PyTorch", "智能营养分析")
    Container(imageAnalyzer, "图像分析器", "Python + OpenCV", "食物识别、份量估算")
    Container(chatBot, "智能客服", "Python + Rasa", "营养问答、健康咨询")
    
    ' 数据存储层
    ContainerDb(userDB, "用户数据库", "PostgreSQL", "用户信息、认证数据")
    ContainerDb(nutritionDB, "营养数据库", "MySQL", "食物营养成分、饮食记录")
    ContainerDb(recipeDB, "食谱数据库", "MongoDB", "食谱内容、烹饪步骤")
    ContainerDb(healthDB, "健康数据库", "InfluxDB", "健康指标时序数据")
    ContainerDb(socialDB, "社交数据库", "Neo4j", "用户关系、社区数据")
    ContainerDb(cacheDB, "缓存数据库", "Redis", "会话缓存、热点数据")
    ContainerDb(searchDB, "搜索引擎", "Elasticsearch", "食谱搜索、营养搜索")
    
    ' 消息队列
    Container(messageQueue, "消息队列", "Apache Kafka", "异步消息处理")
    Container(taskQueue, "任务队列", "Redis Queue", "后台任务处理")
    
    ' 文件存储
    Container(fileStorage, "文件存储", "MinIO/AWS S3", "图片、视频、文档存储")
    Container(cdnStorage, "CDN", "Cloudflare", "静态资源分发")
}

' 用户交互关系
Rel(user, userApp, "使用", "HTTPS/移动端")
Rel(user, webApp, "使用", "HTTPS/Web端")
Rel(user, miniProgram, "使用", "HTTPS/小程序")
Rel(nutritionist, nutritionistPortal, "使用", "HTTPS/Web端")
Rel(doctor, doctorPortal, "使用", "HTTPS/Web端")
Rel(nutritionChef, chefPortal, "使用", "HTTPS/Web端")
Rel(admin, adminPortal, "使用", "HTTPS/Web端")

' 前端到BFF关系
Rel(userApp, mobileBFF, "API调用", "HTTPS/REST")
Rel(webApp, webBFF, "API调用", "HTTPS/REST")
Rel(miniProgram, mobileBFF, "API调用", "HTTPS/REST")
Rel(nutritionistPortal, professionalBFF, "API调用", "HTTPS/REST")
Rel(doctorPortal, professionalBFF, "API调用", "HTTPS/REST")
Rel(chefPortal, professionalBFF, "API调用", "HTTPS/REST")
Rel(adminPortal, webBFF, "API调用", "HTTPS/REST")

' BFF到网关关系
Rel(mobileBFF, apiGateway, "服务调用", "HTTP/gRPC")
Rel(webBFF, apiGateway, "服务调用", "HTTP/gRPC")
Rel(professionalBFF, apiGateway, "服务调用", "HTTP/gRPC")

' 网关到服务关系
Rel(apiGateway, userService, "用户管理", "gRPC")
Rel(apiGateway, nutritionService, "营养分析", "gRPC")
Rel(apiGateway, dietService, "饮食记录", "gRPC")
Rel(apiGateway, planService, "计划管理", "gRPC")
Rel(apiGateway, recipeService, "食谱管理", "gRPC")
Rel(apiGateway, consultationService, "营养咨询", "gRPC")
Rel(apiGateway, healthService, "健康数据", "gRPC")
Rel(apiGateway, socialService, "社交功能", "gRPC")
Rel(apiGateway, reminderService, "提醒服务", "gRPC")
Rel(apiGateway, reportService, "报告生成", "gRPC")

' 服务间调用关系
Rel(nutritionService, recommendEngine, "推荐算法", "HTTP/API")
Rel(dietService, nutritionAI, "AI分析", "HTTP/API")
Rel(recipeService, imageAnalyzer, "图像分析", "HTTP/API")
Rel(consultationService, chatBot, "智能问答", "HTTP/API")

' 服务到数据库关系
Rel(userService, userDB, "用户数据", "JDBC/PostgreSQL")
Rel(nutritionService, nutritionDB, "营养数据", "JDBC/MySQL")
Rel(dietService, nutritionDB, "饮食记录", "JDBC/MySQL")
Rel(recipeService, recipeDB, "食谱数据", "MongoDB驱动")
Rel(healthService, healthDB, "健康指标", "InfluxDB协议")
Rel(socialService, socialDB, "社交关系", "Neo4j驱动")
Rel(planService, cacheDB, "计划缓存", "Redis协议")
Rel(reportService, searchDB, "搜索查询", "Elasticsearch API")

' 消息队列关系
Rel(dietService, messageQueue, "饮食事件", "Kafka生产者")
Rel(nutritionService, messageQueue, "营养分析", "Kafka消费者")
Rel(reminderService, taskQueue, "定时任务", "Redis队列")
Rel(reportService, taskQueue, "报告生成", "Redis队列")

' 文件存储关系
Rel(recipeService, fileStorage, "食谱图片", "S3 API")
Rel(imageAnalyzer, fileStorage, "图像存储", "S3 API")
Rel(webApp, cdnStorage, "静态资源", "HTTPS/CDN")
Rel(userApp, cdnStorage, "静态资源", "HTTPS/CDN")

' 外部系统集成
Rel(nutritionService, foodAPI, "营养数据", "HTTPS/REST API")
Rel(dietService, barcodeAPI, "条码识别", "HTTPS/REST API")
Rel(imageAnalyzer, imageAI, "图像识别", "HTTPS/AI API")
Rel(healthService, wearableAPI, "设备数据", "Bluetooth/WiFi")
Rel(healthService, healthPlatform, "健康平台", "SDK/API")
Rel(recipeService, groceryAPI, "食材配送", "HTTPS/REST API")

@enduml 