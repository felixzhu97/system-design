@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title 社交媒体平台 - 容器图

LAYOUT_WITH_LEGEND()

' 外部用户和系统
Person(user, "普通用户", "社交平台用户")
Person(creator, "内容创作者", "专业内容创作者")
Person(admin, "平台管理员", "平台运营管理人员")

' 多端客户层
System_Boundary(clientLayer, "多端客户层") {
    Container(webApp, "Web应用", "React 18, TypeScript, Next.js", "主要社交平台界面，支持桌面端浏览")
    Container(mobileApp, "移动应用", "React Native, TypeScript", "iOS/Android原生体验的社交应用")
    Container(miniProgram, "微信小程序", "TypeScript, 小程序框架", "微信生态内的轻量版社交应用")
    Container(creatorStudio, "创作者工具", "Electron, React", "专业内容创作和管理工具")
    Container(adminPortal, "管理后台", "Vue 3, TypeScript, Vite", "平台管理和运营工具")
    Container(liveApp, "直播应用", "Flutter, WebRTC", "专业直播推流和观看应用")
}

' BFF聚合层
System_Boundary(bffLayer, "BFF聚合层") {
    Container(webBFF, "Web BFF", "Next.js API Routes, TypeScript", "Web端业务聚合服务")
    Container(mobileBFF, "Mobile BFF", "Node.js, Fastify, TypeScript", "移动端业务聚合服务")
    Container(creatorBFF, "Creator BFF", "Node.js, Express, TypeScript", "创作者专用业务聚合")
    Container(liveBFF, "Live BFF", "Node.js, Socket.io, TypeScript", "直播业务聚合服务")
}

' API网关层
System_Boundary(gatewayLayer, "API网关层") {
    Container(apiGateway, "API网关", "Kong, Nginx, Lua", "统一API路由、认证、限流、监控")
    Container(authGateway, "认证网关", "Node.js, Passport.js", "统一身份认证和授权")
    Container(mediaGateway, "媒体网关", "Go, FFmpeg", "多媒体文件处理和分发")
}

' 核心业务服务层
System_Boundary(serviceLayer, "核心业务服务层") {
    Container(userService, "用户服务", "Java, Spring Boot", "用户注册、资料、关系链管理")
    Container(contentService, "内容服务", "Node.js, TypeScript", "内容发布、编辑、管理")
    Container(socialService, "社交服务", "Java, Spring Boot", "关注、点赞、评论、分享")
    Container(feedService, "信息流服务", "Python, FastAPI", "算法推荐、个性化feed")
    Container(messageService, "消息服务", "Go, Gin", "私信、通知、实时消息")
    Container(liveService, "直播服务", "Node.js, WebRTC", "直播推流、观看、互动")
    Container(searchService, "搜索服务", "Python, FastAPI", "内容搜索、用户搜索、热搜")
    Container(moderationService, "审核服务", "Python, AI模型", "内容审核、违规检测")
}

' 数据存储层
System_Boundary(dataLayer, "数据存储层") {
    ContainerDb(userDB, "用户数据库", "PostgreSQL", "用户基础信息、关系链")
    ContainerDb(contentDB, "内容数据库", "MongoDB", "帖子、评论、媒体文件元数据")
    ContainerDb(socialDB, "社交数据库", "Neo4j", "复杂社交关系图谱")
    ContainerDb(feedCache, "信息流缓存", "Redis Cluster", "个性化推荐结果缓存")
    ContainerDb(messageQueue, "消息队列", "Apache Kafka", "异步消息处理")
    ContainerDb(searchIndex, "搜索引擎", "Elasticsearch", "全文搜索索引")
    ContainerDb(mediaStorage, "媒体存储", "MinIO, AWS S3", "图片、视频文件存储")
    ContainerDb(analyticsDB, "数据仓库", "ClickHouse", "用户行为分析数据")
}

' 基础设施层
System_Boundary(infraLayer, "基础设施层") {
    Container_Ext(cdnService, "CDN服务", "Cloudflare", "全球内容分发网络")
    Container_Ext(monitorService, "监控服务", "Prometheus, Grafana", "系统监控和告警")
    Container_Ext(logService, "日志服务", "ELK Stack", "日志收集、分析、查询")
    Container_Ext(aiService, "AI服务", "OpenAI, 自研模型", "内容理解、推荐算法")
}

' 客户端与BFF层连接
Rel(webApp, webBFF, "API调用", "HTTPS/REST")
Rel(mobileApp, mobileBFF, "API调用", "HTTPS/REST")
Rel(miniProgram, mobileBFF, "API调用", "HTTPS/REST")
Rel(creatorStudio, creatorBFF, "API调用", "HTTPS/REST")
Rel(adminPortal, webBFF, "管理API", "HTTPS/REST")
Rel(liveApp, liveBFF, "实时通信", "WebSocket/WebRTC")

' BFF层与API网关连接
Rel(webBFF, apiGateway, "服务调用", "HTTP/gRPC")
Rel(mobileBFF, apiGateway, "服务调用", "HTTP/gRPC")
Rel(creatorBFF, apiGateway, "服务调用", "HTTP/gRPC")
Rel(liveBFF, apiGateway, "服务调用", "HTTP/gRPC")

' API网关与业务服务连接
Rel(apiGateway, userService, "用户管理", "HTTP/gRPC")
Rel(apiGateway, contentService, "内容管理", "HTTP/gRPC")
Rel(apiGateway, socialService, "社交功能", "HTTP/gRPC")
Rel(apiGateway, feedService, "信息流", "HTTP/gRPC")
Rel(apiGateway, messageService, "消息通信", "HTTP/gRPC")
Rel(apiGateway, liveService, "直播服务", "HTTP/WebRTC")
Rel(apiGateway, searchService, "搜索功能", "HTTP/gRPC")
Rel(apiGateway, moderationService, "内容审核", "HTTP/gRPC")

' 业务服务与数据存储连接
Rel(userService, userDB, "读写操作", "JDBC/连接池")
Rel(contentService, contentDB, "读写操作", "MongoDB Driver")
Rel(socialService, socialDB, "关系查询", "Cypher/Bolt")
Rel(feedService, feedCache, "缓存操作", "Redis Protocol")
Rel(messageService, messageQueue, "消息发布", "Kafka Protocol")
Rel(searchService, searchIndex, "搜索查询", "Elasticsearch API")
Rel(contentService, mediaStorage, "文件存储", "S3 API")
Rel(feedService, analyticsDB, "行为数据", "ClickHouse HTTP")

' 外部服务集成
Rel(webApp, cdnService, "静态资源", "HTTPS")
Rel(mobileApp, cdnService, "静态资源", "HTTPS")
Rel(moderationService, aiService, "AI审核", "HTTPS/API")
Rel(feedService, aiService, "推荐算法", "HTTPS/API")

' 用户访问
Rel(user, webApp, "Web访问", "HTTPS")
Rel(user, mobileApp, "移动访问", "原生应用")
Rel(user, miniProgram, "小程序", "微信生态")
Rel(creator, creatorStudio, "内容创作", "桌面应用")
Rel(admin, adminPortal, "平台管理", "HTTPS")

@enduml 